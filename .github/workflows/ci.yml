name: CI
on:
  push:
    tags:
    - v*
    branches:
    - master
  pull_request:
    branches:
    - master
env:
  REGISTRY: registry-write.deckhouse.io
  IMAGE_NAME: k8s-image-availability-exporter/k8s-image-availability-exporter
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - uses: actions/checkout@v3

    - name: Test With Coverage
      run: go test -v -race  -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: coverage.txt

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        args: --timeout=5m
        # since go test already does it in a previous step
        skip-pkg-cache: true
  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DECKHOUSE_REGISTRY_USER }}
          password: ${{ secrets.DECKHOUSE_REGISTRY_PASSWORD }}
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}